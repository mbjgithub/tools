'use strict';
/**
 * itil测速上报
 * @sendguan、zombieyang
 *
 * 耗时段1：dns
 * 耗时段2：request
 * 耗时段3：response
 * 耗时段4：自定义，调用本模块的start4、end4方法
 * 耗时段5：自定义，调用本模块的start5、end5方法
 */

/**
 * dns, request, response, js, loaded
 */
var performance = window.performance;
var report = require("./report");

// 强行上报
var _forceStat = (location.search || location.href).match('_qosstat=1');

/**
 * A random number by percent
 */
function random(percent) {
	return Math.round(Math.random() * (1 / percent)) % 20
}

function doneOnce(f) {
	var called = false;
	return function () {
		if (called) return;
		called = f.apply(this, arguments)
	}
}

var cache = {};

module.exports = function (report_id) {
	if (!cache[report_id]) {

		var _time4Ready = false;
		var _documentReady = false;
		var _time5Ready = false;

		var stat = {};
		stat.t = new Array(5);

		var handle = doneOnce(function () {
			if (_time4Ready && _time5Ready && _documentReady) {
				var randNum = random(0.05);
				// console.log('Rand hit:', randNum);
				// 5% percent reporting
				if (randNum !== 10 && !_forceStat) {
					return true
				} else {
					// console.log('Report hit:', true)
				}
				report("//qos.report.qq.com/collect?type=1&name=" + report_id + '&' + stat.t.map(function (t, i) {
						return (i + 1) + '=' + t
					}).join('&') + "&_rt=" + (+new Date));
				// done
				return true
			}
		});

		cache[report_id] = {
			start4: function (t) {
				stat.t[3] = t || +(new Date);
				return this;
			},
			end4: function (t) {
				_time4Ready = true;
				stat.t[3] = (t || +(new Date)) - stat.t[3];
				handle();
				return this;
			},
			start5: function (t) {
				stat.t[4] = t || +(new Date);
				return this;
			},
			end5: function (t) {
				_time5Ready = true;
				stat.t[4] = (t || +(new Date)) - stat.t[4];
				handle();
				return this;
			}
		};

		if (performance && performance.timing) {
			window.onload = function () {
				setTimeout(function () {
					var timing = performance.timing;
					stat.t[0] = timing.domainLookupEnd - timing.domainLookupStart;   // DNS Lookup time
					stat.t[1] = timing.responseStart - timing.requestStart;         // request time
					stat.t[2] = timing.responseEnd - timing.responseStart;         // document download time
					// stat.t[3]                                                   // js download time
					// stat.t[4] = timing.loadEventEnd - timing.fetochStart         // [old] document onload time
					// stat.t[4]                                                   // [new] Footer script run time
					// do report
					_documentReady = true;
					handle()
				}, 0)
			}
		}
	}

	return cache[report_id];
};