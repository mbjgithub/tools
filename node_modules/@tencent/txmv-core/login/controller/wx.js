/**
 * 微信
 */
'use strict';
var qqController = require("./qq");

var cookie = require('../../util/cookie');
var jsonp = require("../../util/jsonp");
var time33 = require("../../helper/time33");
var pendfn = require("./pendfn");

// 检测hash，写入qq登录的main_login
/**
 * 刷新登陆态和获取用户信息的cgi
 * 为什么是同一个。。
 */
function checkLogin(cb) {
	jsonp('//video.qq.com/fcgi-bin/check_login', function () {
		_cacheLoginData = null;
		cb.apply(null, arguments)
	});
}

var _cacheLoginData = null;
var _callbacks = [];

var URL = '//video.qq.com/getcookie/getcookie.html.html';
exports.getLoginData = pendfn(function (opt, cb) {
	if (typeof opt == 'function' && !cb) {
		cb = opt;
		opt = null;
	}
	opt = opt || {};
	var disableCache = opt.cache === false;

	// 有缓存直接callback缓存
	if (_cacheLoginData && !disableCache) {
		return cb(null, _cacheLoginData);
	}

	if (document.domain !== 'qq.com') {
		cb('document.domain不等于qq.com，跨域失败');
	}

	// 和qq的cookie混合
	// qqController的getLoginData其实是同步的，因此不会导致性能太差
	qqController.getLoginData(opt, function (err, qqdata) {

		// 设置回调
		typeof cb === 'function' && _callbacks.push(cb);
		var callback = window.txvGetLoginCookiesCallback;
		window.txvGetLoginCookiesCallback = function (data) {
			if (callback) {
				callback.apply(this, arguments);
			}
			Object.keys(qqdata).forEach(function (key) {
				data[key] = data[key] || qqdata[key];
			});

			_cacheLoginData = data;
			var fn;
			while (fn = _callbacks.shift()) {
				fn(null, data);
			}
			try {
				ifa.parentNode.removeChild(ifa);
			} catch(e) {}
		};

		// 插入iframe
		var ifa = document.createElement('iframe');
		ifa.src = URL;
		ifa.name = 'tvp_login_cross_domin_frame';
		ifa.id = 'tvp_login_cross_domin_frame';
		ifa.style.display = 'none';
		document.body.appendChild(ifa);
	});
});
exports.getLoginDataSync = exports.getLoginData.sync = function () {
	if (!_cacheLoginData) {
		console.error('没有可用的登录信息缓存！请保证该方法是由用户后续事件触发的。');
		return {};
	}
	return _cacheLoginData;
};

/**
 * 获取csrf用的g_tk
 * 后台的普遍逻辑是：
 * 1.有qq登陆态则传g_tk
 * 2.有wx登陆态则传g_wxtk
 * 也就是说，有可能两者都会需要。
 */
exports.gTk = function (cb) {
	this.getLoginData(function (err, data) {
		var tokens = {};
		var querys = [];
		if (data.skey || data.lskey) {
			tokens.g_tk = time33(data.skey || data.lskey);
			querys.push('g_tk=' + tokens.g_tk);
		}
		if (data.vusession) {
			tokens.g_wxtk = time33(data.vusession);
			querys.push('g_wxtk=' + tokens.g_wxtk);
		}
		tokens.query = querys.join('&');

		cb(null, tokens);
	});
};

var cacheUserInfo = null;
/**
 * 获取用户信息
 */
exports.getUserInfo = function (cb) {
	cb = cb || function () {};
	this.getLoginData(function (err, data) {
		if (data.main_login == 'qq') {
			qqController.getUserInfo.call(qqController, cb);

		} else if (data.main_login == 'wx') {
			if (cacheUserInfo) {
				return cb(null, cacheUserInfo);
			}
			checkLogin(function (err, data) {
				if (!err && data.errcode == 0) {
					// 在H5页面的一个生命周期内，基本不可能发生头像变更的情况，因此永久缓存
					cacheUserInfo = {
						nick: decodeURIComponent(data.nick),
						face: data.head
					};
					cb(null, cacheUserInfo);
				} else {
					cb(err || data, null);
				}
			});

		} else {
			cb('not login');
		}
	})
};
exports.getUserInfo();

exports.openLogin = function (cfg) {
	cfg = cfg || {};
	var type = cfg.type;
	var url = cfg.s_url || window.location.href;
	if (type != 'qq') {
		// @issacchen，这个cgi会decode两次url
		document.location.href = '//video.qq.com/fcgi-bin/wx_login?from=1&redirect_url=' +
			encodeURIComponent(encodeURIComponent(url));
	} else {

		cfg.s_url = location.protocol + '//video.qq.com/fcgi-bin/qq_login?redirect_url=' + encodeURIComponent(url);
		qqController.openLogin(cfg);
	}
};