(function(f){if(typeof exports==="object"&&typeof module!=="undefined"){module.exports=f()}else if(typeof define==="function"&&define.amd){define([],f)}else{var g;if(typeof window!=="undefined"){g=window}else if(typeof global!=="undefined"){g=global}else if(typeof self!=="undefined"){g=self}else{g=this}g.jsonp = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
/**
 * jspnp
 * @version 1.0.1
 * @author switer
 * @github https://github.com/switer/jsonp
 */
'use strict';

var fns = require('@tencent/fns')
var TURL = require('@tencent/url')
var _ns = '_jsonp'
// callback name, 为什么叫 pn ？忘记了
var _pn = 'callback'
var _id = 0
var _t = 20*1000 // 超时时间
var _beforeHooks = [] // hook before send

function noop () {}
function uuid() {
    return Math.floor((1 + Math.random()) * 0x10000)
      .toString(16)
      .substring(1);
}
function remove(el) {
    if (el && el.parentNode) {
        el.parentNode.removeChild(el)
    }
}

function jsonp (url/*[, data]*/, cb, options) {
var args = arguments
return PWrap(function (resolve, reject) {
    var data
    // 参数右移
    if (typeof cb == 'object') {
        data = cb
        cb = options
        options = args[3]
    }
    data = data || {}
    options = options || {}
    cb = cb || noop
    if (typeof cb !== 'function') {
        throw Error('illegal jsonp callback function:', cb)
    }

    var con = document.getElementsByTagName('head') ? document.getElementsByTagName('head')[0] : document.body
    var s = document.createElement('script')
    var cid = [options.ns || _ns, _id ++, uuid()].join('_')
    var useTs = true // enable timestamp of not
    var tsName = '_t' // 
    var time = options.time

    if (options.callbackid) {
        cid = options.callbackid
    }
    if (time === false) {
        useTs = false
    } else if (time) {
        tsName = time
    }
    /**
     * JSONP owner params
     */
    data[options.pn || options.callbackName || _pn] = cid

    if (useTs) {
        data[tsName] = +new Date()
    }

    var onsuccess = function (data) {
        remove(s)
        cb(null, data)
        resolve && resolve(data)
    }
    var onerror = function (e) {
        remove(s)
        cb(e || 'error')
        window[cid] = onsuccess = onerror = noop
        reject && reject(e || error)
    }
    var prehook = window[cid]
    window[cid] = function (data) {
        window[cid] = noop
        try {
            prehook && prehook(data)
        } finally {
            onsuccess(data)
            onsuccess = onerror = noop
        }
    }
    s.onerror = s.onabort = function (e) {
        onerror(e ? e.type : 'error')
    }

    // hook can change url one by one
    fns.forEach(_beforeHooks, function (fn) {
        if (fns.type(fn) == 'function') {
            url = fn(url, data) || url
        }
    })
    s.src = TURL.queryJoin(url, data)
    con.appendChild(s)
    setTimeout(function () {
        onerror('timeout')
    }, options.timeout || _t)
})}
jsonp.timeout = function (t) {
    _t = t
}
jsonp.ns = function (n) {
    _ns = n
}
jsonp.pn = function (n) {
    _pn = n
}
jsonp.before = function (fn) {
    _beforeHooks.push(fn)
}
function PWrap(handler) {
    if (window.Promise) return new Promise(handler)
    else {
        handler(noop, noop)
    }
}
module.exports = jsonp
},{"@tencent/fns":2,"@tencent/url":3}],2:[function(require,module,exports){
'use strict'

var undef = void(0)
function hasOwn (obj, prop) {
    return obj && obj.hasOwnProperty && obj.hasOwnProperty(prop)
}
var fns = {
    type: function(obj) {
        if (obj === null) return 'null'
        else if (obj === undef) return 'undefined' 
        return /\[object (\w+)\]/.exec(Object.prototype.toString.call(obj))[1].toLowerCase()
    },
    keys: function (obj) {
        var keys = []
        if (!obj) return keys
        if (Object.keys) return Object.keys(obj)
        this.objEach(obj, function (key) {
            keys.push(key)
        })
        return keys
    },
    bind: function (fn, ctx) {
        if (fn.bind) return fn.bind(ctx)
        return function () {
            return fn.apply(ctx, arguments)
        }
    },
    extend: function(obj) {
        if (this.type(obj) != 'object') return obj;
        var source, prop;
        for (var i = 1, length = arguments.length; i < length; i++) {
            source = arguments[i];
            for (prop in source) {
                obj[prop] = source[prop];
            }
        }
        return obj;
    },
    trim: function (str) {
        if (str.trim) return str.trim()
        else {
            return str.replace(/^\s+|\s+$/gm, '')
        }
    },
    indexOf: function (arr, tar) {
        if (arr.indexOf) return arr.indexOf(tar)
        else {
            var i = -1
            fns.some(arr, function (item, index) {
                if (item === tar) {
                    i = index
                    return true
                }
            })
            return i
        }
    },
    forEach: function (arr, fn) {
        if (arr.forEach) return arr.forEach(fn)
        else {
            var len = arr.length
            for (var i = 0 ; i < len; i++) {
                fn(arr[i], i)
            }
        }
        return arr
    },
    some: function (arr, fn) {
        if (arr.some) return arr.some(fn)
        else {
            var len = arr.length
            var r = false
            for (var i = 0 ; i < len; i++) {
                if (fn(arr[i], i)) {
                    r = true
                    break
                }
            }
            return r
        }
    },
    map: function (arr, fn) {
        if (arr.map) return arr.map(fn)
        else {
            var len = arr.length
            var next = []
            for (var i = 0 ; i < len; i++) {
                next.push(fn(arr[i], i))
            }
            return next
        }
    },
    objEach: function (obj, fn) {
        if (!obj) return
        for(var key in obj) {
            if (hasOwn(obj, key)) {
                if(fn(key, obj[key]) === false) break
            }
        }
    },
    reduce: function (arr, cb/*initValue*/) {
        if (fns.type(cb) != 'function') throw new TypeError('Array.prototype.reduce callback must be a function')

        var length = arr.length
        if (length === 0 && arguments.length === 2) {
            throw new TypeError('reduce of empty array with no initial value');
        }
        var result;
        var i = length - 1
        if (arguments.length >= 3) {
            result = arguments[2]
        } else {
            do {
                if (i in arr) {
                    result = arr[i--];
                    break;
                }
                // if array contains no values, no initial value to return
                if (--i < 0) {
                    throw new TypeError('reduceRight of empty array with no initial value');
                }
            } while (true);
        }
        if (i < 0) {
            return result;
        }
        do {
            if (i in arr) {
                result = cb(result, arr[i], i, arr);
            }
        } while (i--);
        return result;
    },
    filter: function(arr, fn, context) {
        if (arr.filter) return arr.filter(fn)
        else {
            var len = arr.length
            var res = []
            for(var i = 0; i < len; i++) {
                var val = arr[i]
                if(fn.call(context, val, i, arr)) {
                    res.push(val)
                }
            }
            return res
        }
    }
}

module.exports = fns
},{}],3:[function(require,module,exports){
'use strict'

var util = require('@tencent/fns')

var url = {
    /**
     *  解析 query 字符串
     **/
    queryParse: function(search, spliter) {
        if (!search) return {};

        spliter = spliter || '&';

        var query = search.replace(/^\?/, ''),
            queries = {},
            splits = query ? query.split(spliter) : null;

        if (splits && splits.length > 0) {
            util.forEach(splits, function(item) {
                item = item.split('=');
                var key = item.splice(0, 1),
                    value = item.join('=');
                queries[key] = value;
            });
        }
        return queries;
    },
    /**
     * URL添加query
     */
    queryJoin: function (api, queries) {
        var qs = url.queryStringify(queries)
        if (!qs) return api
        
        var sep
        if (/[\?&]$/.test(api)) {
            sep = ''
        } else if (~api.indexOf('?')) {
            sep = '&'
        } else {
            sep = '?'
        }
        return api + sep + qs
    },
    /**
     * query 对象转换字符串
     */
    queryStringify: function (params, spliter) {
        if (!params) return ''
        return util.map(util.keys(params), function (k) {
            return k + '=' + encodeURIComponent(params[k])
        }).join(spliter || '&')
    }
}

module.exports = url
},{"@tencent/fns":2}]},{},[1])(1)
});